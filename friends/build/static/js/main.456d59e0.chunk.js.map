{"version":3,"sources":["comps/friend.js","comps/friendWrapp.js","comps/form.js","comps/singleFriend.js","comps/home.js","comps/editFriend.js","App.js","serviceWorker.js","index.js"],"names":["Friend","props","react_default","a","createElement","className","onClick","console","log","location","pathname","concat","id","history","push","deleteFriend","name","age","email","class","FriendWrapp","friends","map","friend","comps_friend","Object","assign","key","Form","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","timeout","setTimeout","captureInput","e","setState","edit","newState","target","value","theSubmit","preventDefault","newUser","state","Number","newId","axios","post","then","res","successMessage","updateState","catch","err","failureMessage","put","match","params","onSubmit","htmlFor","type","onChange","React","Component","SingleFriend","find","fr","Home","EditFriend","comps_form","App","updateFriends","data","delete","_this2","get","message","_this3","Route","path","component","exact","render","friendWrapp","length","singleFriend","comps_editFriend","Boolean","window","hostname","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.456d59e0.chunk.js","sourcesContent":["import React from 'react';\nimport './styles/singlefriend.scss';\n\nconst Friend = props => {\n  const singleFriendDir = () => {\n    props.history.push(`/friends/${props.id}`);\n  };\n\n  const editFriend = () => {\n    props.history.push(`/friends/${props.id}/edit`);\n  };\n\n  const returnToFriends = () => {\n    if (props.location.pathname === `/friends/${props.id}`) {\n      props.history.push('/friends');\n    }\n  };\n\n  const deleteFriend = () => {\n    console.log('clicked');\n    returnToFriends();\n    props.deleteFriend(props.id);\n  };\n  return (\n    <div className=\"friendWrapp\">\n      <div className=\"topHeader\">\n        <div className=\"closeCont\">\n          <i className=\"fas fa-window-close\" onClick={deleteFriend} />\n        </div>\n        <h2 className=\"name\">{props.name}</h2>\n      </div>\n      <div className=\"age\">{props.age}</div>\n      <div className=\"email\">{props.email}</div>\n      {props.location.pathname === `/friends/${props.id}` ? (\n        <i class=\"far fa-edit\" onClick={editFriend} />\n      ) : (\n        <i className=\"far fa-user\" onClick={singleFriendDir} />\n      )}\n    </div>\n  );\n};\n\nexport default Friend;\n","import React from 'react';\nimport Friend from './friend.js';\nimport './styles/friendsList.scss';\n\nconst FriendWrapp = props => {\n  return (\n    <div className=\"friendContainer\">\n      {props.friends.map(friend => {\n        return (\n          <Friend\n            {...props}\n            name={friend.name}\n            age={friend.age}\n            email={friend.email}\n            key={friend.id}\n            id={friend.id}\n            deleteFriend={props.deleteFriend}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default FriendWrapp;\n","import React from 'react';\nimport axios from 'axios';\nimport './styles/form.scss';\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    if (this.props.location.pathname === `/friends/${this.props.id}/edit`) {\n      this.setState({\n        edit: true,\n        name: this.props.name,\n        age: this.props.age,\n        email: this.props.email,\n        class: 'failure noshow',\n      });\n    }\n  }\n\n  timeout = () =>\n    setTimeout(() => {\n      this.props.history.push('/friends');\n    }, 1500);\n\n  captureInput = e => {\n    this.setState({edit: false});\n    let newState = {};\n    newState[e.target.id] = e.target.value;\n    this.setState(newState);\n  };\n\n  theSubmit = e => {\n    if (this.props.location.pathname === '/signup') {\n      e.preventDefault();\n      let newUser = Object.assign(this.state);\n      if (newUser.name && newUser.age && newUser.email) {\n        newUser.age = Number(newUser.age);\n        newUser.id = this.props.newId;\n        axios\n          .post('http://www.localhost:5000/friends', newUser)\n          .then(res => {\n            console.log(res);\n            this.setState({successMessage: 'Friend added Successfully'});\n            this.props.updateState(res);\n          })\n          .catch(err => console.log(err));\n\n        this.timeout();\n      } else {\n        const failureStyle = 'failure';\n        this.setState({\n          failureMessage: 'One or more fields were INCORRECT. Please try again',\n          class: failureStyle,\n        });\n      }\n    } else {\n      console.log(this.props.location.pathname);\n      e.preventDefault();\n      let newUser = Object.assign(this.state);\n      if (newUser.name && newUser.age && newUser.email) {\n        newUser.age = Number(newUser.age);\n        axios\n          .put(\n            `http://www.localhost:5000/friends/${this.props.match.params.id}`,\n            {\n              name: this.state.name,\n              age: this.state.age,\n              email: this.state.email,\n            },\n          )\n\n          .then(res => {\n            console.log(res);\n            this.setState({successMessage: 'Friend Changed Successfully'});\n            this.props.updateState(res);\n          })\n          .catch(err => console.log(err));\n        this.timeout();\n      } else {\n        const failureStyle = 'failure';\n        this.setState({\n          failureMessage: 'One or more fields were INCORRECT. Please try again',\n          class: failureStyle,\n        });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"formCont\">\n        <form className=\"form\" onSubmit={this.theSubmit}>\n          <div className=\"name\">\n            <label htmlFor=\"firstName\">Name: </label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              onChange={this.captureInput}\n              value={this.state.edit === true ? this.props.name : null}\n            />\n          </div>\n          <div className=\"age\">\n            <label htmlFor=\"age\">Age: </label>\n            <input\n              type=\"text\"\n              id=\"age\"\n              onChange={this.captureInput}\n              value={this.state.edit === true ? this.props.age : null}\n            />\n          </div>\n          <div className=\"email\">\n            <label htmlFor=\"email\">Email: </label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              onChange={this.captureInput}\n              value={this.state.edit === true ? this.props.email : null}\n            />\n          </div>\n          <button>Submit</button>\n        </form>\n        {this.state.successMessage ? (\n          <div className=\"success\">{this.state.successMessage}</div>\n        ) : (\n          <div className={this.state.class}>{this.state.failureMessage}</div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Form;\n","import React from 'react';\nimport Friend from './friend.js';\n\nconst SingleFriend = props => {\n  // console.log(props.friends);\n  // console.log(props.match.params.id);\n  let friend = props.friends.find(fr => {\n    return fr.id === Number(props.match.params.id);\n  });\n  return (\n    <Friend\n      {...props}\n      name={friend.name}\n      age={friend.age}\n      email={friend.email}\n      key={friend.id}\n      id={friend.id}\n      deleteFriend={props.deleteFriend}\n    />\n  );\n};\n\nexport default SingleFriend;\n","import React from 'react';\nimport './styles/navBar.scss';\n\nconst Home = props => {\n  const friendsButton = () => {\n    props.history.push('/friends');\n  };\n\n  const homeButton = () => {\n    props.history.push('/');\n  };\n\n  const addButton = () => {\n    props.history.push('/signup');\n  };\n\n  return (\n    <div className=\"navCont\">\n      <nav className=\"navBar\">\n        <button className=\"navButton\" onClick={homeButton}>\n          Home\n        </button>\n        <button className=\"navButton\" onClick={friendsButton}>\n          Friends\n        </button>\n        <button className=\"navButton\" onClick={addButton}>\n          Add Friend\n        </button>\n      </nav>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport Form from './form.js';\n\nconst EditFriend = props => {\n  let friend = props.friends.find(fr => {\n    return fr.id === Number(props.match.params.id);\n  });\n  return (\n    <Form\n      {...props}\n      name={friend.name}\n      age={friend.age}\n      email={friend.email}\n      id={friend.id}\n      updateState={props.updateState}\n    />\n  );\n};\n\nexport default EditFriend;\n","import React, {Component} from 'react';\nimport './App.scss';\nimport axios from 'axios';\nimport {Route} from 'react-router-dom';\nimport FriendWrapp from './comps/friendWrapp.js';\nimport Form from './comps/form.js';\nimport SingleFriend from './comps/singleFriend.js';\nimport Home from './comps/home.js';\nimport EditFriend from './comps/editFriend.js';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      friends: [],\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get('http://www.localhost:5000/friends')\n      .then(data => this.setState({friends: data.data}))\n      .catch(err => console.log('Error', err.message));\n  }\n\n  updateFriends = friends => {\n    this.setState({friends: friends.data});\n  };\n\n  deleteFriend = friend => {\n    axios\n      .delete(`http://www.localhost:5000/friends/${friend}`)\n      .then(res => this.setState({friends: res.data}))\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    // console.log(this.state.friends);\n    return (\n      <div className=\"App\">\n        <Route path=\"/\" component={Home} />\n        <Route\n          exact\n          path=\"/friends\"\n          render={props => (\n            <FriendWrapp\n              friends={this.state.friends}\n              {...props}\n              deleteFriend={this.deleteFriend}\n            />\n          )}\n        />\n        <Route\n          exact\n          path=\"/signup\"\n          render={props => <Form {...props} updateState={this.updateFriends} />}\n          newId={this.state.friends.length + 1}\n        />\n        <Route\n          exact\n          path=\"/friends/:id\"\n          render={props => (\n            <SingleFriend\n              {...props}\n              friends={this.state.friends}\n              deleteFriend={this.deleteFriend}\n            />\n          )}\n        />\n        <Route\n          exact\n          path=\"/friends/:id/edit\"\n          render={props => (\n            <EditFriend\n              {...props}\n              friends={this.state.friends}\n              updateState={this.updateFriends}\n              deleteFriend={this.deleteFriend}\n            />\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}