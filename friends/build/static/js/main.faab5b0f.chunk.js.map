{"version":3,"sources":["Styled Components.js","Friend.js","Form.js","App.js","serviceWorker.js","index.js"],"names":["FormStyle","styled","form","_templateObject","InputStyle","input","_templateObject2","Submit","button","_templateObject3","FriendStyle","div","_templateObject4","FriendHeader","h1","_templateObject5","Text","_templateObject6","X","p","_templateObject7","Email","a","_templateObject8","Friend","props","react_default","createElement","friend","name","age","onClick","no","href","email","Form","id","onChange","change","type","placeholder","submit","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","axios","get","then","response","data","message","Promise","reject","setState","catch","err","console","log","handleChange","event","defineProperty","target","value","preventDefault","e","newID","state","length","newObj","post","document","getElementById","reset","_this2","className","src_Form","map","item","src_Friend","key","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.faab5b0f.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const FormStyle = styled.form`\n    display: flex;\n    flex-direction: column;\n`;\n\nexport const InputStyle = styled.input`\n    align-self: center;\n    height: 5vh;\n    border: 1px solid gray;\n    border-radius: 5px;\n    font-size: 16px;\n    padding-left: 2%;\n    margin-bottom: 15px;\n`;\n\nexport const Submit = styled.button`\n    font-size: 16px;\n    font-weight: bold;\n    background-color: lightblue;\n    width: 20%;\n    height: 5vh;\n    border: 1px solid darkgray;\n    border-radius: 5px;\n    align-self: center;\n\n    &:hover{\n        background-color: lightgreen;\n    }\n`;\n\nexport const FriendStyle = styled.div`\n    background-color: lightblue;\n    border: 1px solid darkgray;\n    display: flex;\n    flex-direction: column;\n    width: 50%;\n    margin: 40px auto;\n    padding: 0 0 15px 0;\n`;\n\nexport const FriendHeader = styled.h1`\n    font-size: 30px;\n    margin-bottom: 13px;\n    margin-top: -15px;\n`;\n\nexport const Text = styled.div`\n    font-size: 20px;\n    margin-bottom: 10px;\n`;\n\nexport const X = styled.p`\n    text-align: right;\n    margin-right: 10px;\n    font-size: 20px;\n    font-weight: bold;\n    margin-top: 5px;\n    color: rbg(45,45,45);\n    margin-bottom: 0;\n    width: 5%;\n    align-self: flex-end;\n\n    &:hover{\n        color: gray;\n        cursor: pointer;\n    }\n`;\n\nexport const Email = styled.a`\n    color: black;\n\n    &:hover{\n        color: gray;\n        cursor: pointer;\n    }\n`;","import React from 'react';\nimport {Text, FriendStyle, FriendHeader, X, Email} from './Styled Components';\n\nconst Friend = (props) => {\n    return(\n        <FriendStyle>\n            <X>X</X>\n            <FriendHeader>My name is {props.friend.name}</FriendHeader>\n            <Text>I am {props.friend.age} years old.</Text>\n            <Text>You can contact me at <Email onClick={props.no} href='#'>{props.friend.email}</Email></Text>\n        </FriendStyle>\n    )\n};\n\nexport default Friend;\n","import React from 'react';\nimport {FormStyle, InputStyle, Submit} from './Styled Components';\n\nconst Form = (props) => {\n    return(\n        <FormStyle id=\"form\">\n          <h1>Add a new friend!</h1>\n          <InputStyle onChange={props.change} id='name' type='text' placeholder='name'></InputStyle>\n          <InputStyle onChange={props.change} id='age' type='number' placeholder='age'></InputStyle>\n          <InputStyle onChange={props.change} id='email' type='email' placeholder='email'></InputStyle>\n          <Submit onClick={props.submit}>Add Friend</Submit>\n        </FormStyle>\n    )\n};\n\nexport default Form;\n\n","import React, {Component} from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Friend from './Friend.js';\nimport Form from './Form.js';\nimport {Route} from 'react-router-dom';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      data: [],\n      id: 0,\n      name: '',\n      age: 0,\n      email: ''\n    }\n  }\n\n  componentDidMount = () => {\n    axios.get('http://localhost:5000/friends')\n      .then( response => {\n        if(typeof response.data.message === 'string'){\n          Promise.reject(\"Error: Friends not found :( \")\n        }\n        this.setState({ data: response.data})\n      })\n      .catch( err=> console.log(err))\n    }\n\n  handleChange = (event)=>{\n    this.setState({\n      [event.target.id]: event.target.value\n    })\n  }\n\n  preventDefault = (e) => {\n    e.preventDefault();\n  }\n\n  submit = (e) => {\n    e.preventDefault();\n    let newID = this.state.data.length+1;\n    console.log(newID);\n    this.setState({\n      id: newID\n    })\n\n    const newObj = {\n        id: this.state.id,\n        name: this.state.name,\n        age: this.state.age,\n        email: this.state.email\n    }\n\n    axios.post('http://localhost:5000/friends', newObj)\n      .then(response=>{\n        this.setState({\n          data: response.data\n        })\n      })\n      .catch( err=>console.log(\"Couldn't update axios\"))\n\n    document.getElementById('form').reset();\n\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        < Form \n          change={this.handleChange}\n          submit={this.submit} />\n        {this.state.data.map(item => (\n          <Friend no={this.preventDefault} key={item.id} friend={item} />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n//use router so when user goes to edit, \n//the friend fields become input fields\n//1:46:00","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}